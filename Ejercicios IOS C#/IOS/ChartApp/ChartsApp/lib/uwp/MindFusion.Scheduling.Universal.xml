<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MindFusion.Scheduling.Universal</name>
    </assembly>
    <members>
        <member name="T:MindFusion.Scheduling.Universal.CalendarRenderer">
            <summary>
            Represents a Calendar renderer for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.CalendarRenderer.#ctor">
            <summary>
            Initializes a new instance of the CalendarRenderer class.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.CalendarRenderer.OnElementChanged(Xamarin.Forms.Platform.UWP.ElementChangedEventArgs{MindFusion.Scheduling.Calendar})">
            <summary>
            VisualElementRenderer.OnElementChanged override.
            </summary>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.CalendarButtonRenderer">
            <summary>
            Represents a calendar button renderer for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.CalendarButtonRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            ButtonRenderer.OnElementPropertyChanged override.
            </summary>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.DefaultItemEditorRenderer">
            <summary>
            Represents a default item editor renderer for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.DefaultItemEditorRenderer.OnElementChanged(Xamarin.Forms.Platform.UWP.ElementChangedEventArgs{Xamarin.Forms.Editor})">
            <summary>
            EditorRenderer.OnElementChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.DefaultItemEditorRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            EditorRenderer.OnElementPropertyChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.MenuButtonRenderer.#ctor">
            <summary>
            Initializes a new instance of the MenuButtonRenderer class.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.MenuButtonRenderer.UpdateNativeControl">
            <summary>
            ImageRenderer.UpdateNativeControl override.
            </summary>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.ScrollBarViewRenderer">
            <summary>
            Represents a scrollbar renderer for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.ScrollBarViewRenderer.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarViewRenderer class.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.ScrollBarViewRenderer.OnElementChanged(Xamarin.Forms.Platform.UWP.ElementChangedEventArgs{MindFusion.Scheduling.ScrollBarView})">
            <summary>
            VisualElementRenderer.OnElementChanged override.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.ScrollBarViewRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            VisualElementRenderer.OnElementPropertyChanged override.
            </summary>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.UniversalGraphics">
            <summary>
            An IGraphics implemntation for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.#ctor(Windows.UI.Xaml.Controls.Canvas)">
            <summary>
            Initializes a new instance of the UniversalGraphics class.
            </summary>
            <param name="canvas">
            The underlying Canvas object.
            </param>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphics.DpiX">
            <summary>
            Gets or sets the horizontal resolution of this IGraphics object.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphics.DpiY">
            <summary>
            Gets or sets the vertical resolution of this IGraphics object.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphics.SupportsPenWidth0">
            <summary>
            Gets a value indicating whether the IGraphics object supports
            pens with zero width.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphics.Transform">
            <summary>
            Gets the transformation for this IGraphics object.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.BeginHyperLink(System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawArc(MindFusion.Drawing.Pen,Xamarin.Forms.Rectangle,System.Double,System.Double)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a Rectangle structure.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the arc.
            </param>
            <param name="rect">
            A Rectangle structure that defines the boundaries of the ellipse.
            </param>
            <param name="startAngle">
            Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
            </param>
            <param name="sweepAngle">
            Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawArc(MindFusion.Drawing.Pen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by
            a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the arc.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.
            </param>
            <param name="width">
            The width of the rectangle that defines the ellipse.
            </param>
            <param name="height">
            The height of the rectangle that defines the ellipse.
            </param>
            <param name="startAngle">
            Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
            </param>
            <param name="sweepAngle">
            Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawBezier(MindFusion.Drawing.Pen,Xamarin.Forms.Point,Xamarin.Forms.Point,Xamarin.Forms.Point,Xamarin.Forms.Point)">
            <summary>
            Draws a Bézier spline defined by four Point structures.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the curve.
            </param>
            <param name="p1">
            A Point structure that represents the starting point of the curve.
            </param>
            <param name="p2">
            A Point structure that represents the first control point for the curve.
            </param>
            <param name="p3">
            A Point structure that represents the second control point for the curve.
            </param>
            <param name="p4">
            A Point structure that represents the ending point of the curve.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawBeziers(MindFusion.Drawing.Pen,System.Collections.Generic.IList{Xamarin.Forms.Point})">
            <summary>
            Draws a series of Bézier splines from an array of Point structures.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the curve.
            </param>
            <param name="points">
            An array of Point structures that represent the points that determine the curve.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawEllipse(MindFusion.Drawing.Pen,Xamarin.Forms.Rectangle)">
            <summary>
            Draws an ellipse specified by a bounding Rectangle structure.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the ellipse.
            </param>
            <param name="rect">
            A Rectangle structure that defines the boundaries of the ellipse.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawEllipse(MindFusion.Drawing.Pen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the ellipse.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
            </param>
            <param name="width">
            The width of the bounding rectangle that defines the ellipse.
            </param>
            <param name="height">
            The height of the bounding rectangle that defines the ellipse.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawImage(Xamarin.Forms.ImageSource,Xamarin.Forms.Rectangle)">
            <summary>
            Draws the image represented by the specified ImageSource object
            at the specified location and with the specified size.
            </summary>
            <param name="image">
            An ImageSource representing the image to draw.
            </param>
            <param name="rect">
            A Rectangle structure that specifies the location and size of the drawn image.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawImage(Xamarin.Forms.ImageSource,System.Double,System.Double)">
            <summary>
            Draws the image represented by the specified ImageSource object,
            using its original physical size, at the specified location.
            </summary>
            <param name="image">
            An ImageSource representing the image to draw.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the drawn image.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the drawn image.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawImage(Xamarin.Forms.ImageSource,Xamarin.Forms.Rectangle,MindFusion.Drawing.ImageAlignment,System.Double,Xamarin.Forms.Point)">
            <summary>
            Draws the image represented by the specified ImageSource object
            at the specified location, with the specified alignment and rotation.
            </summary>
            <param name="image">
            An ImageSource representing the image to draw.
            </param>
            <param name="rect">
            A Rectangle structure that specifies the location and size of the drawn image.
            </param>
            <param name="imageAlign">
            The alignment of the image within the specified rectangle.
            </param>
            <param name="rotationAngle">
            The rotation angle of the drawn image.
            </param>
            <param name="pivot">
            The pivot of the rotation.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawLine(MindFusion.Drawing.Pen,Xamarin.Forms.Point,Xamarin.Forms.Point)">
            <summary>
            Draws a line connecting two Point structures.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the line.
            </param>
            <param name="p1">
            A Point structure that represents the first point to connect.
            </param>
            <param name="p2">
            A Point structure that represents the second point to connect.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawLine(MindFusion.Drawing.Pen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the line.
            </param>
            <param name="x1">
            The x-coordinate of the first point.
            </param>
            <param name="y1">
            The y-coordinate of the first point.
            </param>
            <param name="x2">
            The x-coordinate of the second point.
            </param>
            <param name="y2">
            The y-coordinate of the second point.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawLines(MindFusion.Drawing.Pen,System.Collections.Generic.IList{Xamarin.Forms.Point})">
            <summary>
            Draws a series of line segments that connect an array of Point structures.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the line segments.
            </param>
            <param name="points">
            An array of Point structures that represent the points to connect.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawPath(MindFusion.Drawing.Pen,MindFusion.Drawing.IGraphicsPath)">
            <summary>
            Draws an IGraphicsPath object.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the path.
            </param>
            <param name="path">
            An IGraphicsPath object to draw.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawPoint(MindFusion.Drawing.Pen,System.Double,System.Double)">
            <summary>
            Draws a point at the specified coordinates.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the point.
            </param>
            <param name="x">
            The x-coordinate of the point.
            </param>
            <param name="y">
            The y-coordinate of the point.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawRectangle(MindFusion.Drawing.Pen,Xamarin.Forms.Rectangle)">
            <summary>
            Draws a rectangle specified by a Rectangle structure.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the rectangle.
            </param>
            <param name="rect">
            A Rectangle structure that represents the rectangle to draw.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawRectangle(MindFusion.Drawing.Pen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">
            A Pen object that determines the color, width, and style of the rectangle.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangle to draw.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangle to draw.
            </param>
            <param name="width">
            The width of the rectangle to draw.
            </param>
            <param name="height">
            The height of the rectangle to draw.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawString(System.String,Xamarin.Forms.Font,MindFusion.Drawing.Brush,Xamarin.Forms.Rectangle)">
            <summary>
            Draws the specified text string in the specified rectangle with
            the specified Brush and Font objects.
            </summary>
            <param name="text">
            The string to draw.
            </param>
            <param name="font">
            A Font object that defines the text format of the string.
            </param>
            <param name="brush">
            A Brush object that determines the color and texture of the drawn text.
            </param>
            <param name="rect">
            A Rectangle structure that specifies the location of the drawn text.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawString(System.String,Xamarin.Forms.Font,MindFusion.Drawing.Brush,Xamarin.Forms.Rectangle,MindFusion.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with
            the specified Brush and Font objects using the formatting
            attributes of the specified StringFormat object.
            </summary>
            <param name="text">
            The string to draw.
            </param>
            <param name="font">
            A Font object that defines the text format of the string.
            </param>
            <param name="brush">
            A Brush object that determines the color and texture of the drawn text.
            </param>
            <param name="rect">
            A Rectangle structure that specifies the location of the drawn text.
            </param>
            <param name="format">
            A StringFormat object that specifies formatting attributes, such as
            line spacing and alignment, that are applied to the drawn text.
            </param> 
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawString(System.String,Xamarin.Forms.Font,MindFusion.Drawing.Brush,Xamarin.Forms.Point,MindFusion.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with
            the specified Brush and Font objects using the formatting attributes
            of the specified StringFormat object.
            </summary>
            <param name="text">
            The string to draw.
            </param>
            <param name="font">
            A Font object that defines the text format of the string.
            </param>
            <param name="brush">
            A Brush object that determines the color and texture of the drawn text.
            </param>
            <param name="location">
            A Point structure that specifies the upper-left corner of the drawn text.
            </param>
            <param name="format">
            A StringFormat object that specifies formatting attributes, such as
            line spacing and alignment, that are applied to the drawn text.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.DrawString(System.String,Xamarin.Forms.Font,MindFusion.Drawing.Brush,System.Double,System.Double)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects.
            </summary>
            <param name="text">
            The string to draw.
            </param>
            <param name="font">
            A Font object that defines the text format of the string.
            </param>
            <param name="brush">
            A Brush object that determines the color and texture of the drawn text.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the drawn text.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the drawn text.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.EndHyperLink">
            <summary>
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.FillEllipse(MindFusion.Drawing.Brush,Xamarin.Forms.Rectangle)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle
            specified by a Rectangle structure.
            </summary>
            <param name="brush">
            A Brush object that determines the characteristics of the fill.
            </param>
            <param name="rect">
            A Rectangle structure that represents the bounding rectangle
            that defines the ellipse.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.FillEllipse(MindFusion.Drawing.Brush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle
            specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">
            A Brush object that determines the characteristics of the fill.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the bounding
            rectangle that defines the ellipse.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the bounding
            rectangle that defines the ellipse.
            </param>
            <param name="width">
            The width of the bounding rectangle that defines the ellipse.
            </param>
            <param name="height">
            The height of the bounding rectangle that defines the ellipse.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.FillPath(MindFusion.Drawing.Brush,MindFusion.Drawing.IGraphicsPath)">
            <summary>
            Fills the interior of an IGraphicsPath object.
            </summary>
            <param name="brush">
            A Brush object that determines the characteristics of the fill.
            </param>
            <param name="path">
            An IGraphicsPath object that represents the path to fill.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.FillRectangle(MindFusion.Drawing.Brush,Xamarin.Forms.Rectangle)">
            <summary>
            Fills the interior of a rectangle specified by a Rectangle structure.
            </summary>
            <param name="brush">
            A Brush object that determines the characteristics of the fill.
            </param>
            <param name="rect">
            A Rectangle structure that represents the rectangle to fill.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.FillRectangle(MindFusion.Drawing.Brush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">
            A Brush object that determines the characteristics of the fill.
            </param>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangle to fill.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangle to fill.
            </param>
            <param name="width">
            The width of the rectangle to fill.
            </param>
            <param name="height">
            The height of the rectangle to fill.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.GetFontHeight(Xamarin.Forms.Font)">
            <summary>
            Returns the height of the specified font object.
            </summary>
            <param name="font">The font object to return the height of.</param>
            <returns>The height of the font.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.GetImageSize(Xamarin.Forms.ImageSource)">
            <summary>
            Returns the physical size of the specified image.
            </summary>
            <param name="image">
            The image to test.
            </param>
            <returns>
            The size of the image.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.MeasureString(System.String,Xamarin.Forms.Font)">
            <summary>
            Measures the specified string when drawn with the specified Font object.
            </summary>
            <param name="text">
            The string to measure.
            </param>
            <param name="font">
            A Font object that defines the text format of the string.
            </param>
            <returns>
            A Size structure that represents the size, in pixels, of the string
            specified by the text parameter as drawn with the font parameter.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.MeasureString(System.String,Xamarin.Forms.Font,System.Double,MindFusion.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">
            The string to measure.
            </param>
            <param name="font">
            A Font object that defines the text format of the string.
            </param>
            <param name="maxWidth">
            The maximum width of the string.
            </param>
            <param name="format">
            A StringFormat object that represents formatting information,
            such as line spacing, for the string.
            </param>
            <returns>
            A Size structure that represents the size, in pixels, of the string
            specified in the text parameter as drawn with the font parameter
            and the stringFormat parameter.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.Save">
            <summary>
            Saves the current state of this IGraphics object.
            </summary>
            <returns>
            An object that represents the saved state.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.Restore(System.Object)">
            <summary>
            Restores the state of this IGraphics object to the specified state.
            </summary>
            <param name="state">
            An object that represents the state to which to restore this IGraphics object.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.ScaleTransform(System.Double,System.Double)">
            <summary>
            Prepends the specified scaling operation to the transformation matrix of this IGraphics.
            </summary>
            <param name="sx">
            The scale factor in the x direction.
            </param>
            <param name="sy">
            The scale factor in the y direction.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.TranslateTransform(System.Double,System.Double)">
            <summary>
            Prepends the specified translation to the transformation matrix of this IGraphics object.
            </summary>
            <param name="dx">
            The x component of the translation.
            </param>
            <param name="dy">
            The y component of the translation.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.RotateTransform(System.Double)">
            <summary>
            Prepends the specified rotation to the transformation matrix of this IGraphics object.
            </summary>
            <param name="angle">
            The angle of rotation in degrees.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.ResetTransform">
            <summary>
            Resets the transformation matrix of this IGraphics object to the identity matrix.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.SetClip(Xamarin.Forms.Rectangle)">
            <summary>
            Sets the clipping region of this IGraphics object to the specified IGraphicsPath object.
            </summary>
            <param name="rect">
            A Rectangle structure that represents the new clip region.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.SetClip(MindFusion.Drawing.IGraphicsPath)">
            <summary>
            Sets the clipping region of this IGraphics object to the specified IGraphicsPath object.
            </summary>
            <param name="path">
            An IGraphicsPath object that represents the new clip region.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.SetClip(Xamarin.Forms.Rectangle,MindFusion.Drawing.CombineMode)">
            <summary>
            Sets the clipping region of this IGraphics object to the result of the specified
            operation combining the current clip region and the specified IGraphicsPath object.
            </summary>
            <param name="rect">
            A Rectangle structure to combine.
            </param>
            <param name="mode">
            Member of the CombineMode enumeration that specifies the combining operation to use.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.SetClip(MindFusion.Drawing.IGraphicsPath,MindFusion.Drawing.CombineMode)">
            <summary>
            Sets the clipping region of this IGraphics object to the result of the specified
            operation combining the current clip region and the specified IGraphicsPath object.
            </summary>
            <param name="path">
            An IGraphicsPath object to combine.
            </param>
            <param name="mode">
            Member of the CombineMode enumeration that specifies the combining operation to use.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphics.GetPenWidth(System.Double)">
            <summary>
            Provides support for hairline pen width.
            </summary>
            <param name="width">The original pen width.</param>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.UniversalGraphicsFactory">
            <summary>
            An IGraphicsFactory implemntation for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsFactory.#ctor">
            <summary>
            Initializes a new instance of the UniversalGraphicsFactory class.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphicsFactory.IsContextReady">
            <summary>
            Gets a value indicating whether the factory is ready.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsFactory.CreateGraphics">
            <summary>
            Creates an IGraphics object.
            </summary>
            <returns>
            An instance of the IGraphics interface.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsFactory.CreatePath">
            <summary>
            Creates an IGraphicsPath object.
            </summary>
            <returns>
            An instance of the IGraphicsPath interface.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsFactory.CreatePath(Xamarin.Forms.Rectangle)">
            <summary>
            Creates an IGraphicsPath object from the specified rectangle.
            </summary>
            <param name="rect">
            A Rectangle structure.
            </param>
            <returns>
            An instance of the IGraphicsPath interface.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsFactory.CreatePath(MindFusion.Drawing.FillMode)">
            <summary>
            Creates an IGraphicsPath object with the specified fill mode.
            </summary>
            <param name="fillMode">
            A member of the FillMode enumeration.
            </param>
            <returns>
            An instance of the IGraphicsPath interface.
            </returns>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.UniversalGraphicsPath">
            <summary>
            An IGraphicsPath implemntation for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.#ctor">
            <summary>
            Initializes a new instance of the UniversalGraphicsPath class.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.#ctor(MindFusion.Drawing.FillMode)">
            <summary>
            Initializes a new instance of the UniversalGraphicsPath class.
            </summary>
            <param name="fillMode">
            The initial fill mode of the path.
            </param>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphicsPath.PathPoints">
            <summary>
            Gets the points in the path.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalGraphicsPath.PointCount">
            <summary>
            Gets the number of points in the path.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddArc(Xamarin.Forms.Rectangle,System.Double,System.Double)">
            <summary>
            Appends an elliptical arc to the current figure.
            </summary>
            <param name="rect">
            A Rectangle that represents the rectangular bounds of
            the ellipse from which the arc is taken.
            </param>
            <param name="startAngle">
            The starting angle of the arc, measured in degrees clockwise from the x-axis.
            </param>
            <param name="sweepAngle">
            The angle between startAngle and the end of the arc.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddArc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Appends an elliptical arc to the current figure.
            </summary>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangular
            region that defines the ellipse from which the arc is drawn.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangular
            region that defines the ellipse from which the arc is drawn.
            </param>
            <param name="width">
            The width of the rectangular region that defines the ellipse from which the arc is drawn.
            </param>
            <param name="height">
            The height of the rectangular region that defines the ellipse from which the arc is drawn.
            </param>
            <param name="startAngle">
            The starting angle of the arc, measured in degrees clockwise from the x-axis.
            </param>
            <param name="sweepAngle">
            The angle between startAngle and the end of the arc.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddBezier(Xamarin.Forms.Point,Xamarin.Forms.Point,Xamarin.Forms.Point,Xamarin.Forms.Point)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
            <param name="p1">
            A Point that represents the starting point of the curve.
            </param>
            <param name="p2">
            A Point that represents the first control point for the curve.
            </param>
            <param name="p3">
            A Point that represents the second control point for the curve.
            </param>
            <param name="p4">
            A Point that represents the endpoint of the curve.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
            <param name="x1">
            The x-coordinate of the starting point of the curve.
            </param>
            <param name="y1">
            The y-coordinate of the starting point of the curve.
            </param>
            <param name="x2">
            The x-coordinate of the first control point for the curve.
            </param>
            <param name="y2">
            The y-coordinate of the first control point for the curve.
            </param>
            <param name="x3">
            The x-coordinate of the second control point for the curve.
            </param>
            <param name="y3">
            The y-coordinate of the second control point for the curve.
            </param>
            <param name="x4">
            The x-coordinate of the endpoint of the curve.
            </param>
            <param name="y4">
            The y-coordinate of the endpoint of the curve.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddBeziers(System.Collections.Generic.IList{Xamarin.Forms.Point})">
            <summary>
            Adds a sequence of connected cubic Bézier curves to the current figure.
            </summary>
            <param name="points">
            An array of Point structures that represents the points that define the curves.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddEllipse(Xamarin.Forms.Rectangle)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
            <param name="rect">
            A Rectangle that represents the bounding rectangle that defines the ellipse.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddEllipse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
            <param name="x">
            The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
            </param>
            <param name="width">
            The width of the bounding rectangle that defines the ellipse.
            </param>
            <param name="height">
            The height of the bounding rectangle that defines the ellipse.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddLine(Xamarin.Forms.Point,Xamarin.Forms.Point)">
            <summary>
            Appends a line segment to this IGraphicsPath.
            </summary>
            <param name="p1">
            A Point that represents the starting point of the line.
            </param>
            <param name="p2">
            A Point that represents the endpoint of the line.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddLine(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Appends a line segment to the current figure.
            </summary>
            <param name="x1">
            The x-coordinate of the starting point of the line.
            </param>
            <param name="y1">
            The y-coordinate of the starting point of the line.
            </param>
            <param name="x2">
            The x-coordinate of the endpoint of the line.
            </param>
            <param name="y2">
            The y-coordinate of the endpoint of the line.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddLines(System.Collections.Generic.IList{Xamarin.Forms.Point})">
            <summary>
            Appends a series of connected line segments to the end of this IGraphicsPath.
            </summary>
            <param name="points">
            A list of Point structures that represents the points that define the line segments to add.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddRectangle(Xamarin.Forms.Rectangle)">
            <summary>
            Adds a rectangle to this path.
            </summary>
            <param name="rect">
            The rectangle to add.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a rectangle to this path.
            </summary>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangle to add.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangle to add.
            </param>
            <param name="width">
            The width of the rectangle to add.
            </param>
            <param name="height">
            The height of the rectangle to add.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.AddRoundRect(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a rounded rectangle to this path.
            </summary>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangle to add.
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangle to add.
            </param>
            <param name="width">
            The width of the rectangle to add.
            </param>
            <param name="height">
            The height of the rectangle to add.
            </param>
            <param name="radius">
            The roundness of the rectangle corners.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.CloseFigure">
            <summary>
            Closes the current figure and starts a new figure. If the current
            figure contains a sequence of connected lines and curves,
            the method closes the loop by connecting a line from the endpoint
            to the starting point.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.Flatten">
            <summary>
            Converts each curve in this path into a sequence of connected line segments.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.Flatten(System.Double)">
            <summary>
            Converts each curve in this path into a sequence of connected line segments
            using the specified factor.
            </summary>
            <param name="flatness">
            Specifies the factor of the flatness. This value ranges between 1 and 100.
            Reducing the flatness value will increase the number of line segments in the approximation.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.GetBounds">
            <summary>
            Returns a rectangle that bounds this GraphicsPath.
            </summary>
            <returns>
            A Rectangle that represents a rectangle that bounds this IGraphicsPath.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.IntersectsWith(MindFusion.Drawing.IGraphicsPath)">
            <summary>
            Checks whether this IGraphicsPath intersects with the specified IGraphicsPath.
            </summary>
            <param name="path">
            The IGraphicsPath to test.
            </param>
            <returns>
            true if the two paths intersect; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.IsVisible(Xamarin.Forms.Point)">
            <summary>
            Indicates whether the specified point is contained within this IGraphicsPath.
            </summary>
            <param name="point">
            The point to test.
            </param>
            <returns>
            true if the specified point is contained within this IGraphicsPath; otherwise, false.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.StartFigure">
            <summary>
            Starts a new figure without closing the current figure.
            All subsequent points added to the path are added to this new figure.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalGraphicsPath.Transform(MindFusion.Drawing.IMatrix)">
            <summary>
            Applies a transform matrix to this IGraphicsPath.
            </summary>
            <param name="matrix">
            An IMatrix that represents the transformation to apply.
            </param>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.UniversalMatrix">
            <summary>
            An IMatrix implemntation for the Universal Windows platform.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.#ctor">
            <summary>
            Initializes a new instance of the UniversalMatrix class.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.#ctor(Windows.UI.Xaml.Media.Transform)">
            <summary>
            Initializes a new instance of the UniversalMatrix class.
            </summary>
            <param name="transform">
            A UWP Transform to initialize this object with.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.#ctor(Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Initializes a new instance of the UniversalMatrix class.
            </summary>
            <param name="matrix">
            A UWP Matrix to initialize this object with.
            </param>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalMatrix.IsIdentity">
            <summary>
            Gets a value indicating whether this IMatrix is the identity matrix.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalMatrix.OffsetX">
            <summary>
            Gets the translation of this matrix along the x-axis.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.UniversalMatrix.OffsetY">
            <summary>
            Gets the translation of this matrix along the y-axis.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.Clone">
            <summary>
            Creates an exact clone of this matrix.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.Dispose">
            <summary>
            IDisposable.Dispose implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.Inverse">
            <summary>
            Inverts this Matrix, if it is invertible.
            </summary>
            <returns>
            An instance of the IMatrix interface.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.Reset">
            <summary>
            Reset this matrix.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.Translate(System.Double,System.Double)">
            <summary>
            Applies the specified translation to this IMatrix by prepending the translation.
            </summary>
            <param name="dx">
            The x value by which to translate this IMatrix.
            </param>
            <param name="dy">
            The y value by which to translate this IMatrix.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.RotateAt(System.Double)">
            <summary>
            Prepend to this IMatrix a clockwise rotation by the specified angle.
            </summary>
            <param name="angle">
            The angle of the rotation, in degrees.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.RotateAt(System.Double,Xamarin.Forms.Point)">
            <summary>
            Applies a clockwise rotation to this Matrix around the point
            specified in the point parameter, and by prepending the rotation.
            </summary>
            <param name="angle">
            The angle of the rotation, in degrees.
            </param>
            <param name="point">
            A Point that represents the center of the rotation.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.Scale(System.Double,System.Double)">
            <summary>
            Applies the specified scale vector to this IMatrix by prepending the scale vector.
            </summary>
            <param name="sx">
            The value by which to scale this IMatrix in the x-axis direction.
            </param>
            <param name="sy">
            The value by which to scale this IMatrix in the y-axis direction.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.TransformPoint(Xamarin.Forms.Point)">
            <summary>
            Applies the geometric transform represented by this IMatrix
            to the specified point.
            </summary>
            <param name="point">
            The point to transform.
            </param>
            <returns>
            The transformed point.
            </returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.TransformPoints(System.Collections.Generic.IList{Xamarin.Forms.Point})">
            <summary>
            Applies the geometric transform represented by this IMatrix
            to the specified array of points.
            </summary>
            <param name="points">
            A list of Point structures that represents the points to transform.
            </param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.UniversalMatrix.TransformRect(Xamarin.Forms.Rectangle)">
            <summary>
            Applies the geometric transform represented by this IMatrix
            to the specified rectangle.
            </summary>
            <param name="rect">
            The rectangle to transform.
            </param>
            <returns>
            The transformed rectangle.
            </returns>
        </member>
        <member name="T:MindFusion.Scheduling.Universal.Vector">
            <summary>
            Represents a two-dimensional vector.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.#ctor(System.Double,System.Double)">
            <summary>
             Initializes a new instance of the Vector structure with specified coordinates.
            </summary>
            <param name="x">X coordinate of the vector.</param>
            <param name="y">Y coordinate of the vector.</param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
             Initializes a new instance of the Vector structure from the specified points.
            </summary>
            <param name="p1">Origin point of the vector.</param>
            <param name="p2">End point of the vector.</param>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Equals(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Compares two vectors for equality.
            </summary>
            <param name="vector1">The first vector to compare.</param>
            <param name="vector2">The second vector to compare.</param>
            <returns>true if the vectors are equal, or otherwise false.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Equals(System.Object)">
            <summary>
            Object.Equals override.
            </summary>
            <param name="o">The object to compare this vector with.</param>
            <returns>true if the objects are equal, or otherwise false.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Equals(MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Compare this vector with the specified vector for equality.
            </summary>
            <param name="value">The vector to compare with.</param>
            <returns>true if the vectors are equal, or otherwise false.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.GetHashCode">
            <summary>
            Object.GetHashCode override.
            </summary>
            <returns>The vector's hash code.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.ToString">
            <summary>
            Object.ToString override.
            </summary>
            <returns>The vector's string representation.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.ToString(System.IFormatProvider)">
            <summary>
            Returns the vector's string representation in specified culture.
            </summary>
            <param name="provider">An IFormatProvider (e.g. CultureInfo) specifying number format.</param>
            <returns>The vector's string representation.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.ConvertToString(System.String,System.IFormatProvider)">
            <summary>
            Returns the vector's string representation in specified format and culture.
            </summary>
            <param name="format">A number format specifier.</param>
            <param name="provider">An IFormatProvider (e.g. CultureInfo) specifying number format.</param>
            <returns>The vector's string representation.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Normalize">
            <summary>
            Normalizes this vector.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.CrossProduct(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Returns the cross product of two vectors.
            </summary>
            <param name="vector1">A Vector instance.</param>
            <param name="vector2">A Vector instance.</param>
            <returns>The cross product of specified vectors.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.AngleBetween(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Returns the angle between two vectors.
            </summary>
            <param name="vector1">A Vector instance.</param>
            <param name="vector2">A Vector instance.</param>
            <returns>The angle between specified vectors.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Negate">
            <summary>
            Reverses this vector's direction.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Subtract(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="vector1">A Vector instance.</param>
            <param name="vector2">A Vector instance.</param>
            <returns>The difference between specified vectors.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Add(MindFusion.Scheduling.Universal.Vector,Windows.Foundation.Point)">
            <summary>
            Adds vector to a point.
            </summary>
            <param name="vector">A Vector instance.</param>
            <param name="point">A Point instance.</param>
            <returns>A point offset from the specified point by adding specified vector.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Multiply(MindFusion.Scheduling.Universal.Vector,System.Double)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="vector">A Vector instance.</param>
            <param name="scalar">A double value.</param>
            <returns>A Vector with same direction and multiplied length.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Multiply(System.Double,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="scalar">A double value.</param>
            <param name="vector">A Vector instance.</param>
            <returns>A Vector with same direction and multiplied length.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Divide(MindFusion.Scheduling.Universal.Vector,System.Double)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="vector">A Vector instance.</param>
            <param name="scalar">A double value.</param>
            <returns>A Vector with same direction and divided length.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Multiply(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Multiplies two vectors.
            </summary>
            <param name="vector1">A Vector instance.</param>
            <param name="vector2">A Vector instance.</param>
            <returns>The dot product of specified vectors.</returns>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Equality(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Compares for equality.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Inequality(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Compares for inequality.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_UnaryNegation(MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Returns the vector with same length in opposite direction.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Addition(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Adds two vectors.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Add(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Adds two vectors.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Subtraction(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Subtracts two vectors.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Addition(MindFusion.Scheduling.Universal.Vector,Windows.Foundation.Point)">
            <summary>
            Adds vector to a point.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Multiply(MindFusion.Scheduling.Universal.Vector,System.Double)">
            <summary>
            Multiplies vector by a scalar value.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Multiply(System.Double,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Multiplies vector by a scalar value.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Division(MindFusion.Scheduling.Universal.Vector,System.Double)">
            <summary>
            Divides vector by a scalar value.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Multiply(MindFusion.Scheduling.Universal.Vector,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Returns dot product of two vectors.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Explicit(MindFusion.Scheduling.Universal.Vector)~Windows.Foundation.Size">
            <summary>
            Converts to SizeF.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Explicit(MindFusion.Scheduling.Universal.Vector)~Windows.Foundation.Point">
            <summary>
            Converts to Point.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.op_Addition(Windows.Foundation.Point,MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Adds vector to a point.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Left(MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Returns the left vector.
            </summary>
        </member>
        <member name="M:MindFusion.Scheduling.Universal.Vector.Right(MindFusion.Scheduling.Universal.Vector)">
            <summary>
            Returns the right vector.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.Vector.X">
            <summary>
            X coordinate of the vector.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.Vector.Y">
            <summary>
            Y coordinate of the vector.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.Vector.Length">
            <summary>
            Returns the vector length.
            </summary>
        </member>
        <member name="P:MindFusion.Scheduling.Universal.Vector.LengthSquared">
            <summary>
            Returns the squared length.
            </summary>
        </member>
    </members>
</doc>
